{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/constants.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","pictures/logo.svg"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","el","cardDeleteButtonClassName","cardLikeButtonClassName","link","name","onClick","onCardClick","type","onCardLike","length","onCardDelete","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","Footer","ImagePopup","popupOpened","srcLink","cardName","onClose","PopupWithForm","isOpen","id","action","method","noValidate","onSubmit","title","children","defaultValue","EditProfilePopup","useState","setName","description","setDescription","useEffect","ev","preventDefault","onUpdateUser","onChange","target","value","required","placeholder","pattern","maxLength","minLength","EditAvatarPopup","inputForAvatar","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","basedUrl","Api","this","_token","url","params","fetch","then","result","ok","json","Promise","reject","status","_fetch","headers","authorization","body","JSON","stringify","cardId","likeStatus","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCards","setCurrentUser","api","handleCloseAllPopups","getCardsApi","catch","error","console","getUserInfoApi","Provider","changeLikeCardStatus","newCard","newCards","cardEl","deleteCardApi","filter","setUserInfo","setUserAvatar","postCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.aba26f59.chunk.js","sourcesContent":["import React from \"react\";\r\nimport headerLogo from \"../pictures/logo.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"logo\" src={headerLogo} alt=\"Логотип\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some((el) => el._id === currentUser._id);\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n  // Переменная, задающая css класс кнопки удаления, в зависимости от владения карточкой\r\n  const cardDeleteButtonClassName = `${\r\n    isOwn\r\n      ? \"card__delete-button\"\r\n      : \"card__delete-button card__delete-button_hidden\"\r\n  }`;\r\n  // Переменная, задающая css класс кнопки лайка, в зависимости от того, поставлен ли уже лайк\r\n  const cardLikeButtonClassName = `${\r\n    isLiked ? \"card__like-button card__like-button_active\" : \"card__like-button\"\r\n  }`;\r\n  return (\r\n    <li className=\"card\">\r\n      <img\r\n        className=\"card__picture\"\r\n        src={props.card.link}\r\n        alt={props.card.name}\r\n        onClick={handleClick}\r\n      />\r\n      <h2 className=\"card__title\">{props.card.name}</h2>\r\n      <div className=\"card__like-wrapper\">\r\n        <button\r\n          className={cardLikeButtonClassName}\r\n          type=\"button\"\r\n          onClick={handleLikeClick}\r\n        ></button>\r\n        <p className=\"card__likes-number\">{props.card.likes.length}</p>\r\n      </div>\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type=\"button\"\r\n        onClick={handleDeleteClick}\r\n      ></button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar-wrapper\" onClick={props.onEditAvatar}>\r\n          <img\r\n            className=\"profile__avatar\"\r\n            src={currentUser.avatar}\r\n            alt=\"Аватар пользователя\"\r\n          />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__info-shell\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button\r\n              className=\"profile__edit-button\"\r\n              type=\"button\"\r\n              onClick={props.onEditProfile}\r\n            ></button>\r\n          </div>\r\n          <p className=\"profile__description\">{currentUser.about}</p>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <ul className=\"cards\">\r\n        {props.cards.map((card) => (\r\n          <Card\r\n            card={card}\r\n            key={card._id}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  let popupOpened;\r\n  let srcLink;\r\n  let cardName;\r\n  if (props.card) {\r\n    popupOpened = \"popup_opened\";\r\n    srcLink = props.card.link;\r\n    cardName = props.card.name;\r\n  }\r\n  return (\r\n    <section className={`popup popup_for_image ${popupOpened}`}>\r\n      <div className=\"popup__img-wrapper\">\r\n        <img className=\"popup__image\" src={srcLink} alt=\"Фото места\" />\r\n        <p className=\"popup__img-title\">{cardName}</p>\r\n        <button\r\n          className=\"popup__close-button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n  let isOpen;\r\n  if (props.isOpen) {\r\n    isOpen = \"popup_opened\";\r\n  }\r\n  return (\r\n    <section className={`popup popup_for_${props.name} ${isOpen}`}>\r\n      <form\r\n        id={`form_for_${props.name}`}\r\n        className=\"popup__content\"\r\n        action=\"#\"\r\n        method=\"POST\"\r\n        noValidate\r\n        onSubmit={props.onSubmit}\r\n      >\r\n        <button\r\n          className=\"popup__close-button\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        <fieldset className=\"popup__fieldset\">{props.children}</fieldset>\r\n        <button\r\n          className=\"popup__submit-button \"\r\n          type=\"submit\"\r\n          defaultValue=\"Сохранить\"\r\n        >\r\n          Сохранить\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState();\r\n  const [description, setDescription] = React.useState();\r\n  function handleChangeName(ev) {\r\n    setName(ev.target.value);\r\n  }\r\n  function handleChangeDescription(ev) {\r\n    setDescription(ev.target.value);\r\n  }\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Редактировать профиль\"\r\n      name=\"edit\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id=\"input-name\"\r\n        className=\"popup__input popup__input_name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        defaultValue={name}\r\n        onChange={handleChangeName}\r\n        required\r\n        placeholder=\"Имя\"\r\n        pattern=\"[A-Za-zА-Яа-яЁё -]{2,40}\"\r\n      />\r\n      <span id=\"input-name-error\" className=\"popup__input-error-text\">\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n      <input\r\n        id=\"input-dscr\"\r\n        className=\"popup__input popup__input_description\"\r\n        type=\"text\"\r\n        name=\"info\"\r\n        defaultValue={description}\r\n        onChange={handleChangeDescription}\r\n        required\r\n        placeholder=\"О себе\"\r\n        maxLength=\"200\"\r\n        minLength=\"2\"\r\n      />\r\n      <span id=\"input-dscr-error\" className=\"popup__input-error-text\">\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  //Используем хук \"ref\" для доступа к полю ввода\r\n  const inputForAvatar = React.useRef();\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    // Передаём значение инпута во внешний обработчик\r\n    props.onUpdateAvatar({\r\n      avatar: inputForAvatar.current.value,\r\n    });\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Обновить аватар\"\r\n      name=\"add-avatar\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id=\"input-avatar-src\"\r\n        className=\"popup__input popup__input_avatar-src\"\r\n        type=\"url\"\r\n        ref={inputForAvatar}\r\n        name=\"avatar\"\r\n        defaultValue=\"\"\r\n        required\r\n        placeholder=\"Ссылка на аватар\"\r\n      />\r\n      <span id=\"input-avatar-src-error\" className=\"popup__input-error-text\">\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [name, setName] = React.useState();\r\n  const [link, setLink] = React.useState();\r\n  function handleChangeName(ev) {\r\n    setName(ev.target.value);\r\n  }\r\n  function handleChangeLink(ev) {\r\n    setLink(ev.target.value);\r\n  }\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddPlace({\r\n      name: name,\r\n      link: link,\r\n    });\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"add-card\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id=\"input-place-name\"\r\n        className=\"popup__input popup__input_place-name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        onChange={handleChangeName}\r\n        defaultValue={name}\r\n        required\r\n        placeholder=\"Название\"\r\n        minLength=\"1\"\r\n        maxLength=\"30\"\r\n      />\r\n      <span id=\"input-place-name-error\" className=\"popup__input-error-text\">\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n      <input\r\n        id=\"input-img-src\"\r\n        className=\"popup__input popup__input_img-src\"\r\n        type=\"url\"\r\n        name=\"link\"\r\n        onChange={handleChangeLink}\r\n        defaultValue={link}\r\n        required\r\n        placeholder=\"Ссылка на картинку\"\r\n      />\r\n      <span id=\"input-img-src-error\" className=\"popup__input-error-text\">\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","export const token = \"89e2c3a3-c362-4c73-9168-38bfd7349e7e\";\r\nexport const myCohort = \"cohort-12\";\r\nexport const basedUrl = \"https://mesto.nomoreparties.co/v1\";\r\n","import { token, myCohort, basedUrl } from \"../utils/constants\";\r\n\r\nexport default class Api {\r\n  constructor() {\r\n    this._token = token;\r\n  }\r\n  _fetch(url, params) {\r\n    return fetch(url, params).then((result) => {\r\n      if (result.ok) {\r\n        return result.json();\r\n      }\r\n      return Promise.reject(result.status);\r\n    });\r\n  }\r\n  //Получение информации о массиве карточек\r\n  getCardsApi() {\r\n    return this._fetch(`${basedUrl}/${myCohort}/cards`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    });\r\n  }\r\n  //Получение информации о пользователе\r\n  getUserInfoApi() {\r\n    return this._fetch(`${basedUrl}/${myCohort}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    });\r\n  }\r\n  // Метод изменения инфо о юзере\r\n  setUserInfo(body) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  }\r\n  //Метод изменения аватара пользователя\r\n  setUserAvatar(body) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  }\r\n  //Метод постановки-удалкения лайка\r\n  changeLikeCardStatus(cardId, likeStatus) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/cards/likes/${cardId}`, {\r\n      method: `${likeStatus ? \"PUT\" : \"DELETE\"}`,\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    });\r\n  }\r\n  //Метод удаления карточки\r\n  deleteCardApi(cardId) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    });\r\n  }\r\n  //Метод отправки формы для добавления каротчки\r\n  postCard(card) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(card),\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport Api from \"../utils/Api\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\r\n    false\r\n  );\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\r\n    false\r\n  );\r\n  const [selectedCard, setSelectedCard] = React.useState();\r\n  const [cards, setCards] = React.useState([]);\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const api = new Api();\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  function handleCloseAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard();\r\n  }\r\n  function handleUpdateUser(body) {\r\n    api\r\n      .setUserInfo(body)\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n      })\r\n      .then(handleCloseAllPopups())\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  function handleUpdateAvatar(body) {\r\n    api\r\n      .setUserAvatar(body)\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n      })\r\n      .then(handleCloseAllPopups())\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  //Функция постановки-удаления лайка\r\n  function handleCardLike(card) {\r\n    //Проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((el) => el._id === currentUser._id);\r\n    //Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        //Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((cardEl) =>\r\n          cardEl._id === card._id ? newCard : cardEl\r\n        );\r\n        //Обновляем стейт\r\n        setCards(newCards);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  //Функция удаления карточки\r\n  function handleCardDelete(card) {\r\n    //Отправляем запрос в API данные удаляемой карточки\r\n    api\r\n      .deleteCardApi(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((cardEl) => card._id !== cardEl._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  //Функция сабмита формы добавления карточки\r\n  function handleAddPlaceSubmit(card) {\r\n    api\r\n      .postCard(card)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n      })\r\n      .then(handleCloseAllPopups())\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  React.useEffect(() => {\r\n    const api = new Api();\r\n    api\r\n      .getCardsApi()\r\n      .then((result) => {\r\n        setCards(result);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  React.useEffect(() => {\r\n    const api = new Api();\r\n    api\r\n      .getUserInfoApi()\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header />\r\n        <Main\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n        <Footer />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={handleCloseAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={handleCloseAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={handleCloseAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        <ImagePopup card={selectedCard} onClose={handleCloseAllPopups} />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}